setwd("~/Copy/Learning/Data Science/John Hopkins/Getting and Cleaning Data"
)
getwd9)
getwd()
dir("./data")
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.csv", method = "curl")
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
names(cameraData)
names(cameraData)
names(cameraData) <- tolower(names(cameraData))
names(cameraData)
splitNames <- strsplit(names(cameraData), "\\.")
splitNames
splitnames[[6]]
splitNames[[6]]
splitNames[6]
splitNames[6][1]
splitNames[[6]][1]
firstElement <- function(x) {x[1]}
splitNames1 <- sapply(splitNames, firstElement)
splitNames1
dir("./data")
head(reviews, 2)
reviews <- read.csv("./data/reviews.csv")
solutions <- read.csv("./data/solutions.csv")
names(reviews)
names(solutions)
fileUrl <- "http://opendata.nlb.gov.sg/content/RSS.newarrivals"
download.file(fileUrl, "./data/nlbnewtitle.xml")
library(XML)
dir("./data")
nlbdata <- xmlTreeParse("./data/nlbnewtitle.xml", useInternal = TRUE)
nlbdata
head(nlbdata)
nlbdataRoot <- xmlRoot(nlbdata)
nlbdataRoot
xmlName(nlbdataRoot)
names(nlbdataRoot)
summary(nlbdataRoot)
structure(nlbdataRoot)
nlbdata1 <- xpathSApply(nlbdataRoot, "//title", xmlValue)
nlbdata1
nlbdata
nlbdataSubject <- xmlSApply(nlbdata, "//subject", xmlValue)
nlbdataSubject <- xpathSApply(nlbdata, "//subject", xmlValue)
nlbdataSubject
names(nlbdataSubject)
head(nlbdataSubject)
unique(nlbdataSubject)
uniqueEntries <- unique(nlbdataSubject)
split(nlbdataSubject, uniqueEntries)
?split
?levels
levels(nlbdataSubject)
nlbdataSubject$Other
?list
table(nlbdataSubject)
hist(table(nlbdataSubject))
?hist
hist(nlbdataSubject)
nlbdata1
table(nlbdataSubject)
?grep
?iconv
nlbdata2 <- grep("dat2", iconv(nlbdata1, "latin1", "ASCII", sub = "dat2"))
nlbdata2
nlbdata3 <- nlbdata1[-nlbdata2]
nlbdata3
nlbdata3
?match
sapply(nlbdata3, match("love", nlbdata3))
sapply
?sapply
sapply(nlbdata3, match("love"))
"love" %in% nlbdata3
"Bad" %in% nlbdata3
any(nlbdata3 == "Bad")
any(nlbdata3 == "Burma")
any(nlbdata3 == "Burm")
nlbdata3Split <- strsplit(nlbdata3, "[.?]+")
nlbdata3Split
nlbdata3Split <- strsplit(nlbdata3, "[.? ?]+")
nlbdata3Split
library(stringr)
nlbdata3Split2 <- str_replace_all(nlbdata3, "[^[:alnum]]", "")
nlbdata3Split2
nlbdata3Split2 <- str_replace_all(nlbdata3, "[^[:alnum]]", " ")
nlbdata3Split2
?str_replace_all
nlbdata3Split2 <- str_replace_all(nlbdata3, "[^[:alnum:]]", "")
nlbdata3Split2
nlbdata3Split2 <- str_replace_all(nlbdata3Split, "[^[:alnum:]]", "")
nlbdata3Split
unlist(nlbdata3Split)
nlbdata3Split2 <- unlist(nlbdata3Split)
nlbdata3Split3 <- str_replace_all(nlbdata3Split2, "[^[:alnum:]]", "")
nlbdata3Split3
nlbdata3Split3$Null
sapply(nlbdata3Split3, is.null)
sapply(nlbdata3Split3, is.na)
sapply(nlbdata3Split3, is(""))
sapply(nlbdata3Split3, == (""))
nlbdata3Split3 == ""
nlbdata3Split4 <- nlbdata3Split3[! "" %in% nlbdata3Split3]
nlbdata3Split4
nlbdata3Split4 <- nlbdata3Split3[! ("" %in% nlbdata3Split3)]
nlbdata3Split4
nlbdata3Split4 <- nlbdata3Split3[! (nlbdata3Split3 == "")]
nlbdata3Split4
nlbdata3Split3
which(nlbdata3Split3 == "")
length(which(nlbdata3Split3 == ""))
nlbdata3Split4
which(nlbdata3Split4 == "love")
write.table(nlbdata3Split4)
table(nlbdata3Split4)
nlbdatatable <- table(nlbdata3Split4)
nlbdatatable
summary(nlbdatatable)
hist(nlbdatatable)
hist(nlbdata3Split4)
as.data.frame(nlbdatatable)
nlbdataframe <- as.data.frame(nlbdatatable)
names(nlbdataframe)
names(nlbdataframe) <- c("word", "frequency")
names(nlbdataframe)
head(nlbdataframe)
arrange(nlbdataframe, frequency)
library(plyr)
arrange(nlbdataframe, frequency)
nlbdataframe <- arrange(nlbdataframe, desc(frequency))
head(nlbdataframe)
head(nlbdataframe, 200)
library(xlsx)
write.csv(nlbdataframe, "./data/nlbwords.csv", sep="/t")
dir("./data")
nlbwords <- read.csv("./data/nlbwords.csv")
head(nlbwords, 200)
savehistory("~/Copy/Learning/Data Science/John Hopkins/Getting and Cleaning Data/nlbwords.Rhistory")
